// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace RaymiMusic.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RaymiMusic.Modelos.Album", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codigo"));

                    b.Property<int>("ArtistaCodigo")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("FechaLanzamiento")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("FechaModificacion")
                        .HasColumnType("date");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Codigo");

                    b.HasIndex("ArtistaCodigo");

                    b.ToTable("Albumes");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Artista", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codigo"));

                    b.Property<string>("Biografia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NombreArtistico")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UsuarioCodigo")
                        .HasColumnType("integer");

                    b.HasKey("Codigo");

                    b.HasIndex("UsuarioCodigo");

                    b.ToTable("Artistas");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Cancion", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codigo"));

                    b.Property<int?>("AlbumCodigo")
                        .HasColumnType("integer");

                    b.Property<int>("ArtistaCodigo")
                        .HasColumnType("integer");

                    b.Property<int>("Duracion")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("FechaCreacion")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("FechaModificacion")
                        .HasColumnType("date");

                    b.Property<string>("Ruta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TituloCancion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Codigo");

                    b.HasIndex("AlbumCodigo");

                    b.HasIndex("ArtistaCodigo");

                    b.ToTable("Canciones");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.CancionPlaylist", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codigo"));

                    b.Property<int>("CancionCodigo")
                        .HasColumnType("integer");

                    b.Property<int>("Orden")
                        .HasColumnType("integer");

                    b.Property<int>("PlaylistCodigo")
                        .HasColumnType("integer");

                    b.HasKey("Codigo");

                    b.HasIndex("CancionCodigo");

                    b.HasIndex("PlaylistCodigo");

                    b.ToTable("CancionesPlaylists");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Estadistica", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codigo"));

                    b.Property<int>("CancionCodigo")
                        .HasColumnType("integer");

                    b.Property<int>("FavoritosTotales")
                        .HasColumnType("integer");

                    b.Property<int>("ReproduccionesTotales")
                        .HasColumnType("integer");

                    b.HasKey("Codigo");

                    b.HasIndex("CancionCodigo");

                    b.ToTable("Estadisticas");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Favorito", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codigo"));

                    b.Property<int>("CancionCodigo")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioCodigo")
                        .HasColumnType("integer");

                    b.HasKey("Codigo");

                    b.HasIndex("CancionCodigo");

                    b.HasIndex("UsuarioCodigo");

                    b.ToTable("Favoritos");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.HistorialReproduccion", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codigo"));

                    b.Property<int>("CancionCodigo")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UsuarioCodigo")
                        .HasColumnType("integer");

                    b.HasKey("Codigo");

                    b.HasIndex("CancionCodigo");

                    b.HasIndex("UsuarioCodigo");

                    b.ToTable("HistorialReproducciones");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Pago", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codigo"));

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<string>("MetodoPago")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Monto")
                        .HasColumnType("numeric");

                    b.Property<int>("SuscripcionCodigo")
                        .HasColumnType("integer");

                    b.HasKey("Codigo");

                    b.HasIndex("SuscripcionCodigo");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Playlist", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codigo"));

                    b.Property<bool>("EsPublica")
                        .HasColumnType("boolean");

                    b.Property<DateOnly>("FechaCreacion")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("FechaModificacion")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UsuarioCodigo")
                        .HasColumnType("integer");

                    b.HasKey("Codigo");

                    b.HasIndex("UsuarioCodigo");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.RefreshToken", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codigo"));

                    b.Property<DateTime>("FechaExpiracion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UsuarioCodigo")
                        .HasColumnType("integer");

                    b.HasKey("Codigo");

                    b.HasIndex("UsuarioCodigo");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Reproduccion", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codigo"));

                    b.Property<int>("CancionCodigo")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UsuarioCodigo")
                        .HasColumnType("integer");

                    b.HasKey("Codigo");

                    b.HasIndex("CancionCodigo");

                    b.HasIndex("UsuarioCodigo");

                    b.ToTable("Reproducciones");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Rol", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codigo"));

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Codigo");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Seguidor", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codigo"));

                    b.Property<int>("SeguidoCodigo")
                        .HasColumnType("integer");

                    b.Property<int?>("SeguidoUsuarioCodigo")
                        .HasColumnType("integer");

                    b.Property<int>("SeguidorCodigo")
                        .HasColumnType("integer");

                    b.Property<int?>("SeguidorUsuarioCodigo")
                        .HasColumnType("integer");

                    b.HasKey("Codigo");

                    b.HasIndex("SeguidoUsuarioCodigo");

                    b.HasIndex("SeguidorUsuarioCodigo");

                    b.ToTable("Seguidores");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Suscripcion", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codigo"));

                    b.Property<bool>("Activa")
                        .HasColumnType("boolean");

                    b.Property<DateOnly?>("FechaFin")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaInicio")
                        .HasColumnType("date");

                    b.Property<int>("TipoSuscripcionCodigo")
                        .HasColumnType("integer");

                    b.HasKey("Codigo");

                    b.HasIndex("TipoSuscripcionCodigo");

                    b.ToTable("Suscripciones");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.TipoSuscripcion", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codigo"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("PrecioMensual")
                        .HasColumnType("numeric");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Codigo");

                    b.ToTable("TiposSuscripciones");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Usuario", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codigo"));

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("FechaNac")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaRegistro")
                        .HasColumnType("date");

                    b.Property<string>("FotoPerfilURL")
                        .HasColumnType("text");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RolCodigo")
                        .HasColumnType("integer");

                    b.Property<int>("SuscripcionCodigo")
                        .HasColumnType("integer");

                    b.HasKey("Codigo");

                    b.HasIndex("RolCodigo");

                    b.HasIndex("SuscripcionCodigo");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Album", b =>
                {
                    b.HasOne("RaymiMusic.Modelos.Artista", "Artista")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistaCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artista");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Artista", b =>
                {
                    b.HasOne("RaymiMusic.Modelos.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Cancion", b =>
                {
                    b.HasOne("RaymiMusic.Modelos.Album", "Album")
                        .WithMany("Canciones")
                        .HasForeignKey("AlbumCodigo");

                    b.HasOne("RaymiMusic.Modelos.Artista", "Artista")
                        .WithMany("Canciones")
                        .HasForeignKey("ArtistaCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("Artista");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.CancionPlaylist", b =>
                {
                    b.HasOne("RaymiMusic.Modelos.Cancion", "Cancion")
                        .WithMany("CancionPlaylists")
                        .HasForeignKey("CancionCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RaymiMusic.Modelos.Playlist", "Playlists")
                        .WithMany("CancionesPlaylists")
                        .HasForeignKey("PlaylistCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cancion");

                    b.Navigation("Playlists");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Estadistica", b =>
                {
                    b.HasOne("RaymiMusic.Modelos.Cancion", "Cancion")
                        .WithMany()
                        .HasForeignKey("CancionCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cancion");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Favorito", b =>
                {
                    b.HasOne("RaymiMusic.Modelos.Cancion", "Cancion")
                        .WithMany()
                        .HasForeignKey("CancionCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RaymiMusic.Modelos.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cancion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.HistorialReproduccion", b =>
                {
                    b.HasOne("RaymiMusic.Modelos.Cancion", "Cancion")
                        .WithMany()
                        .HasForeignKey("CancionCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RaymiMusic.Modelos.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cancion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Pago", b =>
                {
                    b.HasOne("RaymiMusic.Modelos.Suscripcion", "Suscripcion")
                        .WithMany("Pagos")
                        .HasForeignKey("SuscripcionCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Suscripcion");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Playlist", b =>
                {
                    b.HasOne("RaymiMusic.Modelos.Usuario", "Usuario")
                        .WithMany("Playlists")
                        .HasForeignKey("UsuarioCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.RefreshToken", b =>
                {
                    b.HasOne("RaymiMusic.Modelos.Usuario", "Usuario")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UsuarioCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Reproduccion", b =>
                {
                    b.HasOne("RaymiMusic.Modelos.Cancion", "Cancion")
                        .WithMany("Reproducciones")
                        .HasForeignKey("CancionCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RaymiMusic.Modelos.Usuario", "Usuario")
                        .WithMany("Reproducciones")
                        .HasForeignKey("UsuarioCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cancion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Seguidor", b =>
                {
                    b.HasOne("RaymiMusic.Modelos.Usuario", "SeguidoUsuario")
                        .WithMany()
                        .HasForeignKey("SeguidoUsuarioCodigo");

                    b.HasOne("RaymiMusic.Modelos.Usuario", "SeguidorUsuario")
                        .WithMany()
                        .HasForeignKey("SeguidorUsuarioCodigo");

                    b.Navigation("SeguidoUsuario");

                    b.Navigation("SeguidorUsuario");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Suscripcion", b =>
                {
                    b.HasOne("RaymiMusic.Modelos.TipoSuscripcion", "TipoSuscripcion")
                        .WithMany("suscripciones")
                        .HasForeignKey("TipoSuscripcionCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoSuscripcion");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Usuario", b =>
                {
                    b.HasOne("RaymiMusic.Modelos.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RaymiMusic.Modelos.Suscripcion", "Suscripcion")
                        .WithMany("Usuarios")
                        .HasForeignKey("SuscripcionCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Suscripcion");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Album", b =>
                {
                    b.Navigation("Canciones");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Artista", b =>
                {
                    b.Navigation("Albums");

                    b.Navigation("Canciones");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Cancion", b =>
                {
                    b.Navigation("CancionPlaylists");

                    b.Navigation("Reproducciones");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Playlist", b =>
                {
                    b.Navigation("CancionesPlaylists");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Suscripcion", b =>
                {
                    b.Navigation("Pagos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.TipoSuscripcion", b =>
                {
                    b.Navigation("suscripciones");
                });

            modelBuilder.Entity("RaymiMusic.Modelos.Usuario", b =>
                {
                    b.Navigation("Playlists");

                    b.Navigation("RefreshTokens");

                    b.Navigation("Reproducciones");
                });
#pragma warning restore 612, 618
        }
    }
}
